{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiia/Documents/GitHub/weather-app/src/CurrentWeather.js\";\nimport React from 'react';\nimport WeatherIcon from './WeatherIcon';\nimport \"./CurrentWeather.css\";\nexport default function CurrentWeather(props) {\n  var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  var days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  function currentTime() {\n    var now = new Date();\n    var dt = new Date(new Date().getTime() + (props.weather.timezone + now.getTimezoneOffset() * 60) * 1000);\n    var day = days[dt.getDay()];\n    var month = months[dt.getMonth()];\n    var minutes = dt.getMinutes();\n    var houres = dt.getHours();\n\n    if (minutes < 10) {\n      minutes = \"0\".concat(minutes);\n    }\n\n    if (houres < 10) {\n      houres = \"0\".concat(houres);\n    }\n\n    return \"\".concat(day, \", \").concat(dt.getDate(), \" \").concat(month, \" \").concat(houres, \":\").concat(minutes);\n  }\n\n  var unitsMapping = {\n    \"imperial\": \"째F\",\n    \"metric\": \"째C\"\n  };\n  var temp = Math.round(props.weather.temperature);\n  var temp_min = Math.round(props.weather.temp_min);\n  var temp_max = Math.round(props.weather.temp_max);\n\n  if (props.units === \"imperial\") {\n    temp = Math.round(temp * 1.8 + 32);\n    temp_min = Math.round(temp_min * 1.8 + 32);\n    temp_max = Math.round(temp_max * 1.8 + 32);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weatherTodayWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weatherTodayContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weatherPositioning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leftBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, props.weather.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, \"Local time:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }), currentTime())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centralBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(WeatherIcon, {\n    icon: props.weather.icon,\n    color: \"#a8d3f7\",\n    size: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rightBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, temp), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temperature-scale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, unitsMapping[props.units])), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, \"Wind: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 27\n    }\n  }), Math.round(props.weather.wind), \" km/h\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), \"Max: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 26\n    }\n  }, temp_max), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temperature-scale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, unitsMapping[props.units]), \" | Min:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \" \", temp_min), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temperature-scale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, unitsMapping[props.units]))))));\n}","map":{"version":3,"names":["React","WeatherIcon","CurrentWeather","props","months","days","currentTime","now","Date","dt","getTime","weather","timezone","getTimezoneOffset","day","getDay","month","getMonth","minutes","getMinutes","houres","getHours","getDate","unitsMapping","temp","Math","round","temperature","temp_min","temp_max","units","name","icon","wind"],"sources":["/Users/anastasiia/Documents/GitHub/weather-app/src/CurrentWeather.js"],"sourcesContent":["import React from 'react';\nimport WeatherIcon from './WeatherIcon';\nimport \"./CurrentWeather.css\";\n\n\nexport default function CurrentWeather(props) {\n    let months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n    let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    function currentTime(){\n      let now = new Date();\n      let dt = new Date((new Date().getTime())+(props.weather.timezone+(now.getTimezoneOffset()*60))*1000)\n      let day = days[dt.getDay()];\n      let month = months[dt.getMonth()];\n      let minutes=dt.getMinutes();\n      let houres = dt.getHours();\n      if (minutes<10){\n        minutes = `0${minutes}`;\n      }\n      if(houres<10){\n        houres = `0${houres}`;\n      }\n      return (`${day}, ${dt.getDate()} ${month} ${houres}:${minutes}`);  \n    }\n    const unitsMapping = {\n      \"imperial\": \"째F\",\n      \"metric\": \"째C\"\n    }\n    let temp = Math.round(props.weather.temperature);\n    let temp_min = Math.round(props.weather.temp_min);\n    let temp_max = Math.round(props.weather.temp_max);\n    if(props.units===\"imperial\"){\n      temp = Math.round(temp*1.8+32);\n      temp_min = Math.round(temp_min*1.8+32);\n      temp_max = Math.round(temp_max*1.8+32);\n    }\n    \n    \n    return <div className=\"weatherTodayWrap\">\n            <div className=\"weatherTodayContainer\">\n              <div className=\"weatherPositioning\">\n                <div className=\"leftBox\">\n                  <h2>{props.weather.name}</h2>\n                  <p>Local time:<br/>{currentTime()}</p>\n                </div>\n                <div className=\"centralBox\">\n                  <h1><WeatherIcon icon={props.weather.icon} color={\"#a8d3f7\"} size={50}/></h1>\n                </div>\n                <div className=\"rightBox\">\n                  <h2>\n                    <span className=\"temperature\">{temp}</span>\n                    <span className=\"temperature-scale\">{unitsMapping[props.units]}</span>\n                  </h2>\n                  <p>\n                    Wind: <span></span>{Math.round(props.weather.wind)} km/h\n                    <br />\n                    Max: <span className=\"temperature\">{temp_max}</span>\n                    <span className=\"temperature-scale\">{unitsMapping[props.units]}</span> | Min:\n                    <span className=\"temperature\"> {temp_min}</span>\n                    <span className=\"temperature-scale\">{unitsMapping[props.units]}</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,sBAAP;AAGA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAC1C,IAAIC,MAAM,GAAG,CACX,KADW,EAEX,KAFW,EAGX,KAHW,EAIX,KAJW,EAKX,KALW,EAMX,KANW,EAOX,KAPW,EAQX,KARW,EASX,KATW,EAUX,KAVW,EAWX,KAXW,EAYX,KAZW,CAAb;EAcA,IAAIC,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAX;;EACA,SAASC,WAAT,GAAsB;IACpB,IAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;IACA,IAAIC,EAAE,GAAG,IAAID,IAAJ,CAAU,IAAIA,IAAJ,GAAWE,OAAX,EAAD,GAAuB,CAACP,KAAK,CAACQ,OAAN,CAAcC,QAAd,GAAwBL,GAAG,CAACM,iBAAJ,KAAwB,EAAjD,IAAsD,IAAtF,CAAT;IACA,IAAIC,GAAG,GAAGT,IAAI,CAACI,EAAE,CAACM,MAAH,EAAD,CAAd;IACA,IAAIC,KAAK,GAAGZ,MAAM,CAACK,EAAE,CAACQ,QAAH,EAAD,CAAlB;IACA,IAAIC,OAAO,GAACT,EAAE,CAACU,UAAH,EAAZ;IACA,IAAIC,MAAM,GAAGX,EAAE,CAACY,QAAH,EAAb;;IACA,IAAIH,OAAO,GAAC,EAAZ,EAAe;MACbA,OAAO,cAAOA,OAAP,CAAP;IACD;;IACD,IAAGE,MAAM,GAAC,EAAV,EAAa;MACXA,MAAM,cAAOA,MAAP,CAAN;IACD;;IACD,iBAAWN,GAAX,eAAmBL,EAAE,CAACa,OAAH,EAAnB,cAAmCN,KAAnC,cAA4CI,MAA5C,cAAsDF,OAAtD;EACD;;EACD,IAAMK,YAAY,GAAG;IACnB,YAAY,IADO;IAEnB,UAAU;EAFS,CAArB;EAIA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWvB,KAAK,CAACQ,OAAN,CAAcgB,WAAzB,CAAX;EACA,IAAIC,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWvB,KAAK,CAACQ,OAAN,CAAciB,QAAzB,CAAf;EACA,IAAIC,QAAQ,GAAGJ,IAAI,CAACC,KAAL,CAAWvB,KAAK,CAACQ,OAAN,CAAckB,QAAzB,CAAf;;EACA,IAAG1B,KAAK,CAAC2B,KAAN,KAAc,UAAjB,EAA4B;IAC1BN,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAC,GAAL,GAAS,EAApB,CAAP;IACAI,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWE,QAAQ,GAAC,GAAT,GAAa,EAAxB,CAAX;IACAC,QAAQ,GAAGJ,IAAI,CAACC,KAAL,CAAWG,QAAQ,GAAC,GAAT,GAAa,EAAxB,CAAX;EACD;;EAGD,oBAAO;IAAK,SAAS,EAAC,kBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACC;IAAK,SAAS,EAAC,uBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,oBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,SAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAK1B,KAAK,CAACQ,OAAN,CAAcoB,IAAnB,CADF,eAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,+BAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAd,EAAoBzB,WAAW,EAA/B,CAFF,CADF,eAKE;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAI,oBAAC,WAAD;IAAa,IAAI,EAAEH,KAAK,CAACQ,OAAN,CAAcqB,IAAjC;IAAuC,KAAK,EAAE,SAA9C;IAAyD,IAAI,EAAE,EAA/D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAJ,CADF,CALF,eAQE;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAM,SAAS,EAAC,aAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA+BR,IAA/B,CADF,eAEE;IAAM,SAAS,EAAC,mBAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAqCD,YAAY,CAACpB,KAAK,CAAC2B,KAAP,CAAjD,CAFF,CADF,eAKE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,0BACQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADR,EACsBL,IAAI,CAACC,KAAL,CAAWvB,KAAK,CAACQ,OAAN,CAAcsB,IAAzB,CADtB,wBAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,wBAGO;IAAM,SAAS,EAAC,aAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA+BJ,QAA/B,CAHP,eAIE;IAAM,SAAS,EAAC,mBAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAqCN,YAAY,CAACpB,KAAK,CAAC2B,KAAP,CAAjD,CAJF,0BAKE;IAAM,SAAS,EAAC,aAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,QAAgCF,QAAhC,CALF,eAME;IAAM,SAAS,EAAC,mBAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAqCL,YAAY,CAACpB,KAAK,CAAC2B,KAAP,CAAjD,CANF,CALF,CARF,CADF,CADD,CAAP;AA2BH"},"metadata":{},"sourceType":"module"}